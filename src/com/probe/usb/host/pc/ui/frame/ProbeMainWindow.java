package com.probe.usb.host.pc.ui.frame;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.text.DefaultCaret;
import java.awt.*;

public class ProbeMainWindow extends JFrame {
    public JComboBox<String> cboxPorts;
    public JToggleButton autoButton;
    public JToggleButton btnInputFromFile;
    public JButton btnChooseInputFile;
    public JTextField txtInputDataFile;
    public JToggleButton btnRaw;
    public JToggleButton btnAcc;
    public JToggleButton btnMessages;
    public JComboBox<String> cboxCommand;
    public JComboBox<String> cboxArgumentType;
    public JTextField txtCommandArg;
    public JButton btnChooseCommandFile;
    public JTextField txtCommandFile;
    public JButton btnExecuteCommands;
    public JButton sendButton;
    public JButton btnChooseOutputDir;
    public JTextField txtRawFile;
    public JTextField txtAccFile;
    public JTextField txtMessagesFile;
    public JTextField txtOutputDir;
    public JTextArea sendLog;
    public JToggleButton plotButton;
    public JLabel connectionIndicator;
    public JPanel mainWindow;
    public JLabel lblAcc;
    public JToggleButton btnPlotPictures;
    public JTextField txtPictures;
    public JLabel lblRaw;
    public JLabel lblMessages;
    public JLabel lblPictures;
    public JSlider plotSliderX;
    public JSlider plotSliderY;
    public JToggleButton fitXToggleButton;
    public JToggleButton fitYToggleButton;
    public JToggleButton btnTrigger;
    public JSlider plotSliderTrig;

    public void createUIComponents() {
        // TODO: place custom component creation code here
    }

    public ProbeMainWindow() {
        super("ProbeUsbHost");

        setContentPane(mainWindow);
        pack();
        setVisible(true);


        DefaultCaret caret = (DefaultCaret) sendLog.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    @Override
    public void paint(Graphics g) {
        final Dimension
                d = getSize(),
                m = getMinimumSize(),
                n = new Dimension(Math.max(m.width, d.width), Math.max(m.height, d.height));

        if (d.width < m.width || d.height < m.height)
            setSize(n);
        else
            super.paint(g);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainWindow = new JPanel();
        mainWindow.setLayout(new GridLayoutManager(2, 2, new Insets(10, 10, 20, 10), 20, 10));
        mainWindow.setMaximumSize(new Dimension(1800, 1400));
        mainWindow.setMinimumSize(new Dimension(1100, 640));
        mainWindow.setPreferredSize(new Dimension(1100, 640));
        mainWindow.setRequestFocusEnabled(true);
        mainWindow.setVerifyInputWhenFocusTarget(false);
        mainWindow.setBorder(BorderFactory.createTitledBorder(BorderFactory.createRaisedBevelBorder(), null));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        mainWindow.add(panel1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(5, 3, new Insets(10, 20, 10, 20), 10, 10));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(panel2, gbc);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Output Files", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel2.getFont().getName(), panel2.getFont().getStyle(), panel2.getFont().getSize())));
        btnRaw = new JToggleButton();
        btnRaw.setText("Raw Data");
        panel2.add(btnRaw, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, null, 0, false));
        btnAcc = new JToggleButton();
        btnAcc.setText("Accelerations");
        panel2.add(btnAcc, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, null, 0, false));
        btnMessages = new JToggleButton();
        btnMessages.setText("Messages");
        panel2.add(btnMessages, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, null, 0, false));
        btnChooseOutputDir = new JButton();
        btnChooseOutputDir.setText("Choose Directory...");
        panel2.add(btnChooseOutputDir, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 40), null, null, 0, false));
        txtRawFile = new JTextField();
        txtRawFile.setEditable(false);
        panel2.add(txtRawFile, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), new Dimension(200, -1), 0, false));
        txtAccFile = new JTextField();
        txtAccFile.setEditable(false);
        txtAccFile.setText("");
        panel2.add(txtAccFile, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), new Dimension(150, -1), new Dimension(200, -1), 0, false));
        txtMessagesFile = new JTextField();
        txtMessagesFile.setEditable(false);
        panel2.add(txtMessagesFile, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), new Dimension(200, -1), 0, false));
        txtOutputDir = new JTextField();
        txtOutputDir.setAutoscrolls(false);
        txtOutputDir.setEditable(false);
        txtOutputDir.setText("");
        panel2.add(txtOutputDir, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), new Dimension(200, -1), 0, false));
        lblRaw = new JLabel();
        lblRaw.setText("");
        panel2.add(lblRaw, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(80, -1), null, null, 0, false));
        lblAcc = new JLabel();
        lblAcc.setText("");
        panel2.add(lblAcc, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(80, -1), null, null, 0, false));
        lblMessages = new JLabel();
        lblMessages.setText("");
        panel2.add(lblMessages, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(80, -1), null, null, 0, false));
        btnPlotPictures = new JToggleButton();
        btnPlotPictures.setActionCommand("");
        btnPlotPictures.setText("Plot Pictures");
        panel2.add(btnPlotPictures, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, null, 0, false));
        txtPictures = new JTextField();
        txtPictures.setEditable(false);
        panel2.add(txtPictures, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), new Dimension(200, -1), 0, false));
        lblPictures = new JLabel();
        lblPictures.setText("");
        panel2.add(lblPictures, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(3, 1, new Insets(10, 20, 0, 20), 20, 10));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(panel3, gbc);
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Commands from File", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel3.getFont().getName(), panel3.getFont().getStyle(), panel3.getFont().getSize()), new Color(-16777216)));
        txtCommandFile = new JTextField();
        txtCommandFile.setEditable(false);
        txtCommandFile.setText("");
        panel3.add(txtCommandFile, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, 1, null, new Dimension(200, -1), null, 0, false));
        btnExecuteCommands = new JButton();
        btnExecuteCommands.setText("Execute Commands");
        btnExecuteCommands.putClientProperty("html.disable", Boolean.TRUE);
        panel3.add(btnExecuteCommands, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(180, 40), null, null, 0, false));
        btnChooseCommandFile = new JButton();
        btnChooseCommandFile.setOpaque(false);
        btnChooseCommandFile.setText("Choose file...");
        panel3.add(btnChooseCommandFile, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(180, 40), null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.VERTICAL;
        gbc.insets = new Insets(0, 10, 0, 10);
        panel1.add(panel4, gbc);
        panel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Plot", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel4.getFont().getName(), panel4.getFont().getStyle(), panel4.getFont().getSize())));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.insets = new Insets(0, 5, 0, 5);
        panel4.add(panel5, gbc);
        panel5.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel5.getFont().getName(), panel5.getFont().getStyle(), panel5.getFont().getSize())));
        plotSliderX = new JSlider();
        plotSliderX.setMinimumSize(new Dimension(150, 16));
        plotSliderX.setPreferredSize(new Dimension(150, 16));
        panel5.add(plotSliderX);
        plotSliderY = new JSlider();
        plotSliderY.setMinimumSize(new Dimension(150, 16));
        plotSliderY.setPreferredSize(new Dimension(150, 16));
        panel5.add(plotSliderY);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        panel4.add(panel6, gbc);
        fitXToggleButton = new JToggleButton();
        fitXToggleButton.setMaximumSize(new Dimension(120, 40));
        fitXToggleButton.setMinimumSize(new Dimension(120, 40));
        fitXToggleButton.setPreferredSize(new Dimension(120, 40));
        fitXToggleButton.setText("Fit X");
        panel6.add(fitXToggleButton);
        fitYToggleButton = new JToggleButton();
        fitYToggleButton.setMaximumSize(new Dimension(120, 40));
        fitYToggleButton.setMinimumSize(new Dimension(120, 40));
        fitYToggleButton.setPreferredSize(new Dimension(120, 40));
        fitYToggleButton.setText("Fit Y");
        panel6.add(fitYToggleButton);
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        gbc.fill = GridBagConstraints.BOTH;
        panel4.add(panel7, gbc);
        btnTrigger = new JToggleButton();
        btnTrigger.setHideActionText(true);
        btnTrigger.setHorizontalAlignment(0);
        btnTrigger.setMaximumSize(new Dimension(120, 40));
        btnTrigger.setMinimumSize(new Dimension(120, 40));
        btnTrigger.setPreferredSize(new Dimension(120, 40));
        btnTrigger.setText("Trigger");
        panel7.add(btnTrigger);
        plotSliderTrig = new JSlider();
        plotSliderTrig.setMinimumSize(new Dimension(150, 16));
        plotSliderTrig.setPreferredSize(new Dimension(150, 16));
        panel7.add(plotSliderTrig);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        panel4.add(panel8, gbc);
        plotButton = new JToggleButton();
        plotButton.setText("Plot");
        panel8.add(plotButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, new Dimension(120, 40), null, null, 0, false));
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainWindow.add(panel9, new GridConstraints(0, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel9.add(panel10, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(560, 188), null, 0, false));
        final JPanel panel11 = new JPanel();
        panel11.setLayout(new GridLayoutManager(3, 3, new Insets(10, 20, 10, 20), 20, 10));
        panel10.add(panel11, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, true));
        panel11.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Send a Command", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel11.getFont().getName(), panel11.getFont().getStyle(), panel11.getFont().getSize()), new Color(-16777216)));
        final JLabel label1 = new JLabel();
        label1.setText("Command");
        panel11.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cboxArgumentType = new JComboBox();
        panel11.add(cboxArgumentType, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(350, -1), null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Argument Type");
        panel11.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cboxCommand = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        cboxCommand.setModel(defaultComboBoxModel1);
        panel11.add(cboxCommand, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, -1), null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Argument Value");
        panel11.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, 1, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sendButton = new JButton();
        sendButton.setText("Send Command");
        panel11.add(sendButton, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 40), null, null, 0, false));
        txtCommandArg = new JTextField();
        txtCommandArg.setText("");
        panel11.add(txtCommandArg, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(120, -1), new Dimension(150, -1), new Dimension(120, -1), 0, false));
        final JPanel panel12 = new JPanel();
        panel12.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel10.add(panel12, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        scrollPane1.setHorizontalScrollBarPolicy(31);
        scrollPane1.setInheritsPopupMenu(true);
        scrollPane1.setVerticalScrollBarPolicy(22);
        panel12.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 250), null, new Dimension(-1, 250), 0, false));
        sendLog = new JTextArea();
        sendLog.setEditable(false);
        sendLog.setLineWrap(true);
        sendLog.setText("");
        scrollPane1.setViewportView(sendLog);
        final JPanel panel13 = new JPanel();
        panel13.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel10.add(panel13, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel14 = new JPanel();
        panel14.setLayout(new GridLayoutManager(3, 1, new Insets(10, 10, 10, 10), 10, 10));
        panel13.add(panel14, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, true));
        panel14.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "COM Port", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel14.getFont().getName(), panel14.getFont().getStyle(), panel14.getFont().getSize()), new Color(-16777216)));
        cboxPorts = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        cboxPorts.setModel(defaultComboBoxModel2);
        panel14.add(cboxPorts, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(120, -1), null, new Dimension(120, -1), 0, false));
        connectionIndicator = new JLabel();
        connectionIndicator.setEnabled(true);
        connectionIndicator.setFocusable(false);
        connectionIndicator.setHorizontalAlignment(0);
        connectionIndicator.setHorizontalTextPosition(0);
        connectionIndicator.setText("Disconnected");
        panel14.add(connectionIndicator, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(120, 40), null, null, 0, false));
        autoButton = new JToggleButton();
        autoButton.setHorizontalTextPosition(0);
        autoButton.setText("Auto Scan Ports");
        panel14.add(autoButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 40), null, new Dimension(150, 40), 0, false));
        final JPanel panel15 = new JPanel();
        panel15.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), 10, 10, true, true));
        panel15.setEnabled(true);
        panel13.add(panel15, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));
        panel15.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Pre-recorded Raw Input from Device", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(panel15.getFont().getName(), panel15.getFont().getStyle(), panel15.getFont().getSize())));
        final JPanel panel16 = new JPanel();
        panel16.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel15.add(panel16, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, true));
        btnInputFromFile = new JToggleButton();
        btnInputFromFile.setText("Input from file");
        panel16.add(btnInputFromFile, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 40), null, new Dimension(150, -1), 0, false));
        btnChooseInputFile = new JButton();
        btnChooseInputFile.setText("Choose file...");
        panel16.add(btnChooseInputFile, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(150, 40), null, new Dimension(150, -1), 0, false));
        final JPanel panel17 = new JPanel();
        panel17.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel15.add(panel17, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, 1, 1, null, null, null, 0, false));
        txtInputDataFile = new JTextField();
        txtInputDataFile.setEditable(true);
        txtInputDataFile.setEnabled(false);
        txtInputDataFile.setText("");
        panel17.add(txtInputDataFile, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, new Dimension(200, -1), new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainWindow;
    }
}
